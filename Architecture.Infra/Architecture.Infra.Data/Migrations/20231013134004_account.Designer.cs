// <auto-generated />
using System;
using Architecture.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Architecture.Infra.Data.Migrations
{
    [DbContext(typeof(ArchitectureDbContext))]
    [Migration("20231013134004_account")]
    partial class account
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.CredenciaisCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("Identificacao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CredenciaisCliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9245fe4a-d402-451c-b9ed-9c1a04247482"),
                            Chave = "dff0bcb8dad7ea803e8d28bf566bcd354b5ec4e96ff4576a1b71ec4a21d56910",
                            CreateDate = new DateTime(2023, 10, 13, 10, 40, 4, 443, DateTimeKind.Local).AddTicks(3652),
                            Descricao = "Cliente padrão da aplicação",
                            Identificacao = new Guid("7064bbbf-5d11-4782-9009-95e5a6fd6822"),
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LogradouroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PessoaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("LogradouroId");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.HasIndex("PessoaId1");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.GrupoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("GrupoUsuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f97e565d-08af-4281-bc11-c0206eae06fa"),
                            Descricao = "Admin",
                            Nome = "Admin",
                            Situacao = 1
                        },
                        new
                        {
                            Id = new Guid("2c2ab8a3-3665-42ef-b4ef-bbec05ac02a5"),
                            Descricao = "Customer",
                            Nome = "Customer",
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Logradouro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Logradouro");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.MapPermissoesPorGrupoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("GrupoUsuarioId");

                    b.HasIndex("PermissaoId");

                    b.ToTable("MapPermissoesPorGrupoUsuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b94afe49-6630-4bf8-a19d-923af259f475"),
                            GrupoUsuarioId = new Guid("f97e565d-08af-4281-bc11-c0206eae06fa"),
                            PermissaoId = new Guid("bbdbc055-b8b9-42af-b667-9a18c854ee8e"),
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Permissoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbdbc055-b8b9-42af-b667-9a18c854ee8e"),
                            Nome = "CHANGE_STUDENTS",
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Rua", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LogradouroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogradouroId");

                    b.ToTable("Rua");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("GrupoUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Situacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UltimoAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoUsuarioId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Endereco", b =>
                {
                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.Logradouro", "Logradouro")
                        .WithMany()
                        .HasForeignKey("LogradouroId");

                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("Architecture.Application.Domain.DbContexts.Domains.Endereco", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.Pessoa", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaId1");

                    b.Navigation("Logradouro");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.MapPermissoesPorGrupoUsuario", b =>
                {
                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.GrupoUsuario", "GrupoUsuario")
                        .WithMany("MapPermissoesPorGrupoUsuario")
                        .HasForeignKey("GrupoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.Permissao", "Permissao")
                        .WithMany("MapPermissoesPorGrupoUsuario")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoUsuario");

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Pessoa", b =>
                {
                    b.OwnsOne("Architecture.Application.Domain.DbContexts.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<Guid>("PessoaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PrimeiroNome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PrimeiroNome");

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Sobrenome");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoas");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.Navigation("Nome");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Rua", b =>
                {
                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.Logradouro", null)
                        .WithMany("Ruas")
                        .HasForeignKey("LogradouroId");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Usuario", b =>
                {
                    b.HasOne("Architecture.Application.Domain.DbContexts.Domains.GrupoUsuario", "GrupoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("GrupoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoUsuario");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.GrupoUsuario", b =>
                {
                    b.Navigation("MapPermissoesPorGrupoUsuario");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Logradouro", b =>
                {
                    b.Navigation("Ruas");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Permissao", b =>
                {
                    b.Navigation("MapPermissoesPorGrupoUsuario");
                });

            modelBuilder.Entity("Architecture.Application.Domain.DbContexts.Domains.Pessoa", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Enderecos");
                });
#pragma warning restore 612, 618
        }
    }
}
